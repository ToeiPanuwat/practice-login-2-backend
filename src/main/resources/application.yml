#spring.application.name=example-login-2

spring:
  token:
    secret: m#MySecret5339T
    issuer: BackendService
---
app:
  upload:
    path: images

---
spring:
  profiles:
    active:
      - test
---
server:
  port: 1150
spring:
  config:
    activate:
      on-profile:
        - dev
  datasource:
    url: jdbc:postgresql://localhost:5432/login2
    username: postgres
    password: Tonpostgresql04
  jpa:
    properties:
      hibernate:
        format_sql: true
    show-sql: true
    hibernate:
      ddl-auto: create-drop
  servlet:
    multipart:
      max-file-size:
        5MB
      max-request-size:
        6MB
  kafka:
    bootstrap-servers:
      - localhost:9092
    consumer:
      group-id: "my-login-2-app"
  jackson:
    date-format: yyyy-MM-dd
  data:
    redis:
      host: localhost
      port: 6379
  cache:
    type: redis
    redis:
      time-to-live: 60000
---
spring:
  config:
    activate:
      on-profile:
        - test

  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: TonsonDev!
  jpa:
    properties:
      hibernate:
        format_sql: true
    show-sql: true
    hibernate:
      ddl-auto: create-drop # ใช้ create-drop เพื่อให้ schema ถูกสร้างใหม่และลบออกหลังทดสอบ

  jackson:
    date-format: yyyy-MM-dd

  data:
    redis:
      host: localhost
      port: 6379

  cache:
    type: redis
    redis:
      time-to-live: 60000

# หาก Kafka ไม่จำเป็นในการทดสอบ สามารถปิดการใช้งานได้
spring.kafka.consumer.auto-offset-reset: earliest
